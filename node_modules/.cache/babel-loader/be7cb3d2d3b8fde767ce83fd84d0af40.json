{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\john\\\\Desktop\\\\Upgrad\\\\practice-react\\\\youtube-clone\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport SearchBar from './components/search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './components/video_list';\nimport VideoDetail from './components/video_detail';\nimport Comments from './components/comments';\nimport Like from './components/like';\nconst API_KEY = 'AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // made an empty array and a property selectedVideo which is originally set to null\n      videos: [],\n      selectedVideo: null\n    };\n    this.videoSearch('Chitkara University'); //query which initially search for Upgrad \n  }\n\n  videoSearch(searchTerm) {\n    YTSearch({\n      key: API_KEY,\n      term: searchTerm\n    }, data => {\n      // function to get data from the api and assign it to the array and selectedvideo property.\n      this.setState({\n        videos: data,\n        selectedVideo: data[0]\n      });\n    });\n  }\n\n  userSelected(selected) {\n    // callback method to change videoplayer video on click of video on video list\n    this.setState({\n      selectedVideo: selected\n    });\n    var A = document.getElementById('btn-like');\n    A.style.backgroundColor = \"white\";\n    document.getElementById('list-to-be-added').innerHTML = \"\";\n  }\n\n  render() {\n    return (//placement of components and passing props\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearchTermChange: searchTerm => this.videoSearch(searchTerm),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(VideoDetail, {\n        video: this.state.selectedVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(VideoList, {\n        onVideoSelect: this.userSelected.bind(this),\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\john\\Desktop\\Upgrad\\practice-react\\youtube-clone\\src\\App.js"],"names":["React","Component","SearchBar","YTSearch","VideoList","VideoDetail","Comments","Like","API_KEY","App","constructor","props","state","videos","selectedVideo","videoSearch","searchTerm","key","term","data","setState","userSelected","selected","A","document","getElementById","style","backgroundColor","innerHTML","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,MAAMC,OAAO,GAAG,yCAAhB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAe;AACxBC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAKA,SAAKC,WAAL,CAAiB,qBAAjB,EARgB,CAQ0B;AAC7C;;AAEDA,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtBb,IAAAA,QAAQ,CAAC;AAACc,MAAAA,GAAG,EAAET,OAAN;AAAeU,MAAAA,IAAI,EAAEF;AAArB,KAAD,EAAoCG,IAAD,IAAU;AACnD;AACE,WAAKC,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAEM,IADE;AAEVL,QAAAA,aAAa,EAAEK,IAAI,CAAC,CAAD;AAFT,OAAd;AAIH,KANO,CAAR;AAQD;;AACDE,EAAAA,YAAY,CAACC,QAAD,EAAU;AAAC;AACrB,SAAKF,QAAL,CAAc;AAACN,MAAAA,aAAa,EAAEQ;AAAhB,KAAd;AACA,QAAIC,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAN;AACUF,IAAAA,CAAC,CAACG,KAAF,CAAQC,eAAR,GAAwB,OAAxB;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CG,SAA5C,GAAsD,EAAtD;AACX;;AACCC,EAAAA,MAAM,GAAG;AACP,WAAS;AACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,kBAAkB,EAAEb,UAAU,IAAI,KAAKD,WAAL,CAAiBC,UAAjB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,SAAD;AACE,QAAA,aAAa,EAAE,KAAKO,YAAL,CAAkBS,IAAlB,CAAuB,IAAvB,CADjB;AAEE,QAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWC,MAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AADF;AASD;;AAtCyB;;AAyC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from './components/search_bar';\nimport YTSearch from 'youtube-api-search';\nimport VideoList from './components/video_list'\nimport VideoDetail from './components/video_detail';\nimport Comments from './components/comments';\nimport Like from './components/like';\nconst API_KEY = 'AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s';\n\nclass App extends Component {\n  constructor(props){  \n    super(props);\n\n    this.state = {              // made an empty array and a property selectedVideo which is originally set to null\n        videos: [],\n        selectedVideo: null\n    };\n\n    this.videoSearch('Chitkara University');  //query which initially search for Upgrad \n}\n\nvideoSearch(searchTerm) {\n  YTSearch({key: API_KEY, term: searchTerm}, (data) => {\n    // function to get data from the api and assign it to the array and selectedvideo property.\n      this.setState({ \n          videos: data,\n          selectedVideo: data[0]   \n      });\n  });\n\n}\nuserSelected(selected){// callback method to change videoplayer video on click of video on video list\n  this.setState({selectedVideo: selected});\n  var A=document.getElementById('btn-like');\n            A.style.backgroundColor=\"white\";\n            document.getElementById('list-to-be-added').innerHTML=\"\";\n}\n  render() {\n    return ( //placement of components and passing props\n      <div> \n        <SearchBar onSearchTermChange={searchTerm => this.videoSearch(searchTerm)}/>\n        <VideoDetail video={this.state.selectedVideo}/>\n        <VideoList \n          onVideoSelect={this.userSelected.bind(this)} \n          videos={this.state.videos}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}