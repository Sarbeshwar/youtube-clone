{"ast":null,"code":"var _jsxFileName = \"D:\\\\Upgrad\\\\practice-react\\\\youtube-clone\\\\src\\\\components\\\\search_bar.js\";\nimport React from 'react';\n\nclass SearchBar extends React.Component {\n  // initially assigning proprty term as null.\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: ''\n    };\n    this.onInputChange = this.onInputChange.bind(this); // binding this \n  }\n\n  onInputChange(event) {\n    // method to change the value of term on change in search bar and also changing the styling of like button \n    this.setState({\n      term: event.target.value\n    });\n    this.props.onSearchTermChange(event.target.value);\n    var A = document.getElementById('btn-like');\n    A.style.backgroundColor = \"white\";\n    document.getElementById('list-to-be-added').innerHTML = \"\";\n  }\n\n  render() {\n    return (//search bar component\n      React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.term,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["D:\\Upgrad\\practice-react\\youtube-clone\\src\\components\\search_bar.js"],"names":["React","SearchBar","Component","constructor","props","state","term","onInputChange","bind","event","setState","target","value","onSearchTermChange","A","document","getElementById","style","backgroundColor","innerHTML","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuC;AAAE;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB,CAJc,CAIsC;AACvD;;AAEDD,EAAAA,aAAa,CAACE,KAAD,EAAQ;AAAC;AAClB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd;AACA,SAAKR,KAAL,CAAWS,kBAAX,CAA8BJ,KAAK,CAACE,MAAN,CAAaC,KAA3C;AACA,QAAIE,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAN;AACIF,IAAAA,CAAC,CAACG,KAAF,CAAQC,eAAR,GAAwB,OAAxB;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CG,SAA5C,GAAsD,EAAtD;AACP;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAQ;AACJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,IADtB;AAEI,QAAA,QAAQ,EAAE,KAAKC,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AADJ;AAQH;;AAzBkC;;AA6BvC,eAAeN,SAAf","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component{ // initially assigning proprty term as null.\n    constructor(props){\n        super(props);\n        this.state = { term: '' };\n\n        this.onInputChange = this.onInputChange.bind(this); // binding this \n    }\n\n    onInputChange(event) {// method to change the value of term on change in search bar and also changing the styling of like button \n        this.setState({ term: event.target.value });\n        this.props.onSearchTermChange(event.target.value);\n        var A=document.getElementById('btn-like');\n            A.style.backgroundColor=\"white\";\n            document.getElementById('list-to-be-added').innerHTML=\"\";\n    }\n\n    render(){\n        return (//search bar component\n            <div className=\"search-bar\">\n                <input                \n                    value={this.state.term}\n                    onChange={this.onInputChange} \n                />               \n            </div>\n        );        \n    }\n\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}